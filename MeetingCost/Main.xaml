<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="899,2692" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mg="clr-namespace:Microsoft.Graph;assembly=Microsoft.Graph" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uma="clr-namespace:UiPath.MicrosoftOffice365.Activities;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umac="clr-namespace:UiPath.MicrosoftOffice365.Activities.Calendar;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umam="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This sequence describes the logic statements to grab today's calendar and send email to direct manager" DisplayName="Main Execution Sequence - Meetings" sap:VirtualizedContainerService.HintSize="552,2527" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strApplicationID">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">68d36751-172e-4c77-b190-8d345283a7dd</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="strTenant">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">be32aae3-7a3a-4fdb-b71a-161014dd062d</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="strOffice365User">
        <Variable.Default>
          <Literal x:TypeArguments="x:String">paul.pham@parivedasolutions.com</Literal>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Name="billRate" />
      <Variable x:TypeArguments="x:String" Name="strOffice365Pass" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:GetPassword sap2010:Annotation.AnnotationText="Secure encrypted password getter" DisplayName="Get Password - Login to Microsoft Account" sap:VirtualizedContainerService.HintSize="510,64" sap2010:WorkflowViewState.IdRef="GetPassword_1" ProtectedPassword="AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAhoaL04EDAkuMJZtdooe0TQAAAAACAAAAAAADZgAAwAAAABAAAADKx1CiJZAUihAAdqcEKPlcAAAAAASAAACgAAAAEAAAALeN6160YTDYqhSheZnxNpcQAAAAnoZruyG0A7019HAu4CDTQBQAAAAdmElQQM9qxVpX7Wbe1Pzb9RmKng==" Result="[strOffice365Pass]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetPassword>
    <Assign sap2010:Annotation.AnnotationText="Set variable of billRate to a given bill rate from SOW" DisplayName="Assign - billRates" sap:VirtualizedContainerService.HintSize="510,102" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[billRate]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">135</InArgument>
      </Assign.Value>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Assign>
    <uma:Office365ApplicationScope Timeout="{x:Null}" sap2010:Annotation.AnnotationText="Logins into microsoft account to achieve getting calendar activities and sending them to specified recipients" ApplicationId="[strApplicationID]" AuthenticationType="InteractiveToken" DisplayName="Microsoft Office 365 Scope - Microsoft Outlook Activities" sap:VirtualizedContainerService.HintSize="510,2147" sap2010:WorkflowViewState.IdRef="Office365ApplicationScope_6" Password="[strOffice365Pass]" Services="Mail, Calendar" Tenant="[strTenant]" Username="[strOffice365User]">
      <uma:Office365ApplicationScope.Body>
        <ActivityAction x:TypeArguments="mg:GraphServiceClient">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="mg:GraphServiceClient" Name="ParentScope" />
          </ActivityAction.Argument>
          <Sequence sap2010:Annotation.AnnotationText="Use micorosoft library methods to implement logic" DisplayName="Do - Microsoft Core Activities" sap:VirtualizedContainerService.HintSize="476,2019" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Default="Paul" Name="name" />
              <Variable x:TypeArguments="s:String[]" Name="mailingList" />
              <Variable x:TypeArguments="x:String" Name="messageContent" />
              <Variable x:TypeArguments="s:DateTime" Name="startDate">
                <Variable.Default>
                  <mva:VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="DateTime.Parse(DateTime.Now.ToString(&quot;MM/dd/yyyy&quot;)).AddDays(1)" />
                </Variable.Default>
              </Variable>
              <Variable x:TypeArguments="s:DateTime" Name="endDate">
                <Variable.Default>
                  <mva:VisualBasicValue x:TypeArguments="s:DateTime" ExpressionText="startDate.AddDays(1)" />
                </Variable.Default>
              </Variable>
              <Variable x:TypeArguments="mg:Calendar" Name="myCalendar" />
              <Variable x:TypeArguments="mg:Event[]" Name="myEvents" />
              <Variable x:TypeArguments="x:Int32" Name="totalMeetingCost" />
              <Variable x:TypeArguments="x:String" Default="[&quot;Execution Completed: Your total meeting cost to the client is $&quot; + totalMeetingCost.ToString]" Name="endMessage" />
              <Variable x:TypeArguments="mg:Calendar[]" Name="myCalendars" />
              <Variable x:TypeArguments="scg:Dictionary(x:String, x:Double)" Name="myMeetings">
                <Variable.Default>
                  <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Double)" ExpressionText="new Dictionary(Of String, Double)" />
                </Variable.Default>
              </Variable>
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <umac:GetCalendars UserEmail="{x:Null}" sap2010:Annotation.AnnotationText="Microsoft class method to get calendar" Calendars="[myCalendars]" DefaultCalendar="[myCalendar]" DisplayName="Get Calendars - User's Calendar Activities" sap:VirtualizedContainerService.HintSize="434,90" sap2010:WorkflowViewState.IdRef="GetCalendars_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </umac:GetCalendars>
            <umac:SearchEvents SearchQuery="{x:Null}" sap2010:Annotation.AnnotationText="Microsoft class method to get all activities from calendar" Calendar="[myCalendar]" DisplayName="Search Events - In User's Calendar" EndDate="[endDate]" Events="[myEvents]" sap:VirtualizedContainerService.HintSize="434,103" sap2010:WorkflowViewState.IdRef="SearchEvents_8" MaxResults="50" ReturnRecurring="True" StartDate="[startDate]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </umac:SearchEvents>
            <ui:ForEach x:TypeArguments="mg:Event" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="434,685" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[myEvents]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="mg:Event">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="mg:Event" Name="meeting" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,552" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:DateTime" Name="meetingStart" />
                      <Variable x:TypeArguments="s:DateTime" Name="meetingEnd" />
                      <Variable x:TypeArguments="x:Double" Name="meetingDuration" />
                      <Variable x:TypeArguments="x:String" Name="meetingTitle" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[meetingStart]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[DateTime.Parse(meeting.Start.DateTime)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[meetingEnd]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[DateTime.Parse(meeting.End.DateTime)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">[meetingDuration]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">[(meetingEnd - meetingStart).TotalMinutes]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[meetingTitle]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[meeting.Subject]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Double">[myMeetings(meetingTitle)]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Double">[meetingDuration]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <Assign sap2010:Annotation.AnnotationText="Calculate total meeting cost from number of events and bill rates" DisplayName="Assign - totalMeetingCost" sap:VirtualizedContainerService.HintSize="434,102" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[totalMeetingCost]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[myEvents.Length * billRate]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <Assign sap2010:Annotation.AnnotationText="Set message content for email to be sent" DisplayName="Assign - messageContent" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[messageContent]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Format("Dear {0}, This is an automation message to remind you that you will be billing your client ${1} this week for meetings.", name, totalMeetingCost)]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <Assign sap2010:Annotation.AnnotationText="" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[mailingList]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[{strOffice365User}]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <umam:SendMail Account="{x:Null}" AttachmentsCollection="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" sap2010:Annotation.AnnotationText="Microsoft class method to send mail" Body="&lt;html&gt;&#xD;&#xA;&lt;body&gt;&#xD;&#xA;&lt;font face = 'Segoe UI Light' size = '3'&gt;&#xD;&#xA;&lt;font table = 'Segoe UI Light' size = '3'&gt;&#xD;&#xA;Hello ,&#xD;&#xA;&lt;/br&gt;&#xD;&#xA;This Is Test email To ask For the way To format email body.&#xD;&#xA;&lt;/br&gt;&#xD;&#xA;&lt;/br&gt;&#xD;&#xA;Best Regards.&#xD;&#xA;&lt;/font&gt;&#xD;&#xA;&lt;/font&gt;&#xD;&#xA;&lt;/body&gt;&#xD;&#xA;&lt;/html&gt;" DisplayName="Send Mail - To Specified Recipients" sap:VirtualizedContainerService.HintSize="434,351" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHTML="True" IsDraft="False" Subject="[RPA Tool] Total Meeting Cost for the week" To="[mailingList]">
              <umam:SendMail.Attachments>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </umam:SendMail.Attachments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </umam:SendMail>
            <WriteLine sap2010:Annotation.AnnotationText="Output successful execution message" DisplayName="Write Line - End Microsoft Message" sap:VirtualizedContainerService.HintSize="434,103" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[endMessage]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </WriteLine>
          </Sequence>
        </ActivityAction>
      </uma:Office365ApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </uma:Office365ApplicationScope>
  </Sequence>
</Activity>